{
    "type": "object",
    "properties": {
        "parent": {
            "required": true,
            "type": "string"
        },
        "access_token": {
            "type": "string"
        },
        "alt": {
            "type": "string",
            "enum": [
                "json",
                "media",
                "proto"
            ],
            "default": "json"
        },
        "callback": {
            "type": "string"
        },
        "fields": {
            "type": "string"
        },
        "key": {
            "type": "string"
        },
        "oauth_token": {
            "type": "string"
        },
        "prettyPrint": {
            "type": "boolean",
            "default": true
        },
        "quotaUser": {
            "type": "string"
        },
        "uploadType": {
            "type": "string"
        },
        "upload_protocol": {
            "type": "string"
        },
        "requestBody": {
            "description": "Input only.\n\nThe Request body of the `SearchJobs` call.",
            "properties": {
                "disableKeywordMatch": {
                    "description": "Optional.\n\nControls whether to disable exact keyword match on Job.job_title,\nJob.description, Job.company_display_name, Job.locations,\nJob.qualifications. When disable keyword match is turned off, a\nkeyword match returns jobs that do not match given category filters when\nthere are matching keywords. For example, the query \"program manager,\" a\nresult is returned even if the job posting has the title \"software\ndeveloper,\" which does not fall into \"program manager\" ontology, but does\nhave \"program manager\" appearing in its description.\n\nFor queries like \"cloud\" that does not contain title or\nlocation specific ontology, jobs with \"cloud\" keyword matches are returned\nregardless of this flag's value.\n\nPlease use Company.keyword_searchable_custom_fields or\nCompany.keyword_searchable_custom_attributes if company specific\nglobally matched custom field/attribute string values is needed. Enabling\nkeyword match improves recall of subsequent search requests.\n\nDefaults to false.",
                    "type": "boolean"
                },
                "diversificationLevel": {
                    "description": "Optional.\n\nControls whether highly similar jobs are returned next to each other in\nthe search results. Jobs are identified as highly similar based on\ntheir titles, job categories, and locations. Highly similar results are\nclustered so that only one representative job of the cluster is\ndisplayed to the job seeker higher up in the results, with the other jobs\nbeing displayed lower down in the results.\n\nDefaults to DiversificationLevel.SIMPLE if no value\nis specified.",
                    "enum": [
                        "DIVERSIFICATION_LEVEL_UNSPECIFIED",
                        "DISABLED",
                        "SIMPLE"
                    ],
                    "type": "string"
                },
                "enableBroadening": {
                    "description": "Optional.\n\nControls whether to broaden the search when it produces sparse results.\nBroadened queries append results to the end of the matching results\nlist.\n\nDefaults to false.",
                    "type": "boolean"
                },
                "histogramFacets": {
                    "description": "Optional.\n\nHistogram requests for jobs matching JobQuery.",
                    "properties": {
                        "compensationHistogramFacets": {
                            "description": "Optional.\n\nSpecifies compensation field-based histogram requests.\nDuplicate values of CompensationHistogramRequest.type are not allowed.",
                            "items": {
                                "description": "Input only.\n\nCompensation based histogram request.",
                                "properties": {
                                    "bucketingOption": {
                                        "description": "Required.\n\nNumeric histogram options, like buckets, whether include min or max value.",
                                        "properties": {
                                            "bucketBounds": {
                                                "description": "Required.\n\nTwo adjacent values form a histogram bucket. Values should be in\nascending order. For example, if [5, 10, 15] are provided, four buckets are\ncreated: (-inf, 5), 5, 10), [10, 15), [15, inf). At most 20\n[buckets_bound is supported.",
                                                "items": {
                                                    "format": "double",
                                                    "type": "number"
                                                },
                                                "type": "array"
                                            },
                                            "requiresMinMax": {
                                                "description": "Optional.\n\nIf set to true, the histogram result includes minimum/maximum\nvalue of the numeric field.",
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "type": {
                                        "description": "Required.\n\nType of the request, representing which field the histogramming should be\nperformed over. A single request can only specify one histogram of each\n`CompensationHistogramRequestType`.",
                                        "enum": [
                                            "COMPENSATION_HISTOGRAM_REQUEST_TYPE_UNSPECIFIED",
                                            "BASE",
                                            "ANNUALIZED_BASE",
                                            "ANNUALIZED_TOTAL"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "customAttributeHistogramFacets": {
                            "description": "Optional.\n\nSpecifies the custom attributes histogram requests.\nDuplicate values of CustomAttributeHistogramRequest.key are not\nallowed.",
                            "items": {
                                "description": "Custom attributes histogram request. An error is thrown if neither\nstring_value_histogram or long_value_histogram_bucketing_option has\nbeen defined.",
                                "properties": {
                                    "key": {
                                        "description": "Required.\n\nSpecifies the custom field key to perform a histogram on. If specified\nwithout `long_value_histogram_bucketing_option`, histogram on string values\nof the given `key` is triggered, otherwise histogram is performed on long\nvalues.",
                                        "type": "string"
                                    },
                                    "longValueHistogramBucketingOption": {
                                        "description": "Optional.\n\nSpecifies buckets used to perform a range histogram on Job's\nfilterable long custom field values, or min/max value requirements.",
                                        "properties": {
                                            "bucketBounds": {
                                                "description": "Required.\n\nTwo adjacent values form a histogram bucket. Values should be in\nascending order. For example, if [5, 10, 15] are provided, four buckets are\ncreated: (-inf, 5), 5, 10), [10, 15), [15, inf). At most 20\n[buckets_bound is supported.",
                                                "items": {
                                                    "format": "double",
                                                    "type": "number"
                                                },
                                                "type": "array"
                                            },
                                            "requiresMinMax": {
                                                "description": "Optional.\n\nIf set to true, the histogram result includes minimum/maximum\nvalue of the numeric field.",
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "stringValueHistogram": {
                                        "description": "Optional. If set to true, the response includes the histogram value for\neach key as a string.",
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "simpleHistogramFacets": {
                            "description": "Optional.\n\nSpecifies the simple type of histogram facets, for example,\n`COMPANY_SIZE`, `EMPLOYMENT_TYPE` etc.",
                            "items": {
                                "enum": [
                                    "SEARCH_TYPE_UNSPECIFIED",
                                    "COMPANY_ID",
                                    "EMPLOYMENT_TYPE",
                                    "COMPANY_SIZE",
                                    "DATE_PUBLISHED",
                                    "EDUCATION_LEVEL",
                                    "EXPERIENCE_LEVEL",
                                    "ADMIN_1",
                                    "COUNTRY",
                                    "CITY",
                                    "LOCALE",
                                    "LANGUAGE",
                                    "CATEGORY",
                                    "CITY_COORDINATE",
                                    "ADMIN_1_COUNTRY",
                                    "COMPANY_DISPLAY_NAME",
                                    "BASE_COMPENSATION_UNIT"
                                ],
                                "type": "string"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "jobQuery": {
                    "description": "Optional.\n\nQuery used to search against jobs, such as keyword, location filters, etc.",
                    "properties": {
                        "commuteFilter": {
                            "description": "Optional.\n\n Allows filtering jobs by commute time with different travel methods (for\n example, driving or public transit). Note: This only works with COMMUTE\n MODE. When specified, [JobQuery.location_filters] is\n ignored.\n\n Currently we don't support sorting by commute time.",
                            "properties": {
                                "allowImpreciseAddresses": {
                                    "description": "Optional.\nIf `true`, jobs without street level addresses may also be returned.\nFor city level addresses, the city center is used. For state and coarser\nlevel addresses, text matching is used.\nIf this field is set to `false` or is not specified, only jobs that include\nstreet level addresses will be returned by commute search.",
                                    "type": "boolean"
                                },
                                "commuteMethod": {
                                    "description": "Required.\n\nThe method of transportation for which to calculate the commute time.",
                                    "enum": [
                                        "COMMUTE_METHOD_UNSPECIFIED",
                                        "DRIVING",
                                        "TRANSIT"
                                    ],
                                    "type": "string"
                                },
                                "departureTime": {
                                    "description": "Optional.\n\nThe departure time used to calculate traffic impact, represented as\ngoogle.type.TimeOfDay in local time zone.\n\nCurrently traffic model is restricted to hour level resolution.",
                                    "properties": {
                                        "hours": {
                                            "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose\nto allow the value \"24:00:00\" for scenarios like business closing time.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "minutes": {
                                            "description": "Minutes of hour of day. Must be from 0 to 59.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "nanos": {
                                            "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
                                            "format": "int32",
                                            "type": "integer"
                                        },
                                        "seconds": {
                                            "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may\nallow the value 60 if it allows leap-seconds.",
                                            "format": "int32",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                },
                                "roadTraffic": {
                                    "description": "Optional.\n\nSpecifies the traffic density to use when calculating commute time.",
                                    "enum": [
                                        "ROAD_TRAFFIC_UNSPECIFIED",
                                        "TRAFFIC_FREE",
                                        "BUSY_HOUR"
                                    ],
                                    "type": "string"
                                },
                                "startCoordinates": {
                                    "description": "Required.\n\nThe latitude and longitude of the location from which to calculate the\ncommute time.",
                                    "properties": {
                                        "latitude": {
                                            "description": "The latitude in degrees. It must be in the range [-90.0, +90.0].",
                                            "format": "double",
                                            "type": "number"
                                        },
                                        "longitude": {
                                            "description": "The longitude in degrees. It must be in the range [-180.0, +180.0].",
                                            "format": "double",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                },
                                "travelDuration": {
                                    "description": "Required.\n\nThe maximum travel time in seconds. The maximum allowed value is `3600s`\n(one hour). Format is `123s`.",
                                    "format": "google-duration",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "companyDisplayNames": {
                            "description": "Optional.\n\nThis filter specifies the exact company display\nname of the jobs to search against.\n\nIf a value isn't specified, jobs within the search results are\nassociated with any company.\n\nIf multiple values are specified, jobs within the search results may be\nassociated with any of the specified companies.\n\nAt most 20 company display name filters are allowed.",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "companyNames": {
                            "description": "Optional.\n\nThis filter specifies the company entities to search against.\n\nIf a value isn't specified, jobs are searched for against all\ncompanies.\n\nIf multiple values are specified, jobs are searched against the\ncompanies specified.\n\nThe format is \"projects/{project_id}/companies/{company_id}\", for example,\n\"projects/api-test-project/companies/foo\".\n\nAt most 20 company filters are allowed.",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "compensationFilter": {
                            "description": "Optional.\n\nThis search filter is applied only to\nJob.compensation_info. For example, if the filter is specified\nas \"Hourly job with per-hour compensation > $15\", only jobs meeting\nthese criteria are searched. If a filter isn't defined, all open jobs\nare searched.",
                            "properties": {
                                "includeJobsWithUnspecifiedCompensationRange": {
                                    "description": "Optional.\n\nWhether to include jobs whose compensation range is unspecified.",
                                    "type": "boolean"
                                },
                                "range": {
                                    "description": "Optional.\n\nCompensation range.",
                                    "properties": {
                                        "maxCompensation": {
                                            "description": "Optional.\n\nThe maximum amount of compensation. If left empty, the value is set\nto a maximal compensation value and the currency code is set to\nmatch the currency code of\nmin_compensation.",
                                            "properties": {
                                                "currencyCode": {
                                                    "description": "The 3-letter currency code defined in ISO 4217.",
                                                    "type": "string"
                                                },
                                                "nanos": {
                                                    "description": "Number of nano (10^-9) units of the amount.\nThe value must be between -999,999,999 and +999,999,999 inclusive.\nIf `units` is positive, `nanos` must be positive or zero.\nIf `units` is zero, `nanos` can be positive, zero, or negative.\nIf `units` is negative, `nanos` must be negative or zero.\nFor example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "units": {
                                                    "description": "The whole units of the amount.\nFor example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar.",
                                                    "format": "int64",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "minCompensation": {
                                            "description": "Optional.\n\nThe minimum amount of compensation. If left empty, the value is set\nto zero and the currency code is set to match the\ncurrency code of max_compensation.",
                                            "properties": {
                                                "currencyCode": {
                                                    "description": "The 3-letter currency code defined in ISO 4217.",
                                                    "type": "string"
                                                },
                                                "nanos": {
                                                    "description": "Number of nano (10^-9) units of the amount.\nThe value must be between -999,999,999 and +999,999,999 inclusive.\nIf `units` is positive, `nanos` must be positive or zero.\nIf `units` is zero, `nanos` can be positive, zero, or negative.\nIf `units` is negative, `nanos` must be negative or zero.\nFor example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.",
                                                    "format": "int32",
                                                    "type": "integer"
                                                },
                                                "units": {
                                                    "description": "The whole units of the amount.\nFor example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar.",
                                                    "format": "int64",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                },
                                "type": {
                                    "description": "Required.\n\nType of filter.",
                                    "enum": [
                                        "FILTER_TYPE_UNSPECIFIED",
                                        "UNIT_ONLY",
                                        "UNIT_AND_AMOUNT",
                                        "ANNUALIZED_BASE_AMOUNT",
                                        "ANNUALIZED_TOTAL_AMOUNT"
                                    ],
                                    "type": "string"
                                },
                                "units": {
                                    "description": "Required.\n\nSpecify desired `base compensation entry's`\nCompensationInfo.CompensationUnit.",
                                    "items": {
                                        "enum": [
                                            "COMPENSATION_UNIT_UNSPECIFIED",
                                            "HOURLY",
                                            "DAILY",
                                            "WEEKLY",
                                            "MONTHLY",
                                            "YEARLY",
                                            "ONE_TIME",
                                            "OTHER_COMPENSATION_UNIT"
                                        ],
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "customAttributeFilter": {
                            "description": "Optional.\n\nThis filter specifies a structured syntax to match against the\nJob.custom_attributes marked as `filterable`.\n\nThe syntax for this expression is a subset of SQL syntax.\n\nSupported operators are: `=`, `!=`, `<`, `<=`, `>`, and `>=` where the\nleft of the operator is a custom field key and the right of the operator\nis a number or a quoted string. You must escape backslash (\\\\) and\nquote (\\\") characters.\n\nSupported functions are `LOWER([field_name])` to\nperform a case insensitive match and `EMPTY([field_name])` to filter on the\nexistence of a key.\n\nBoolean expressions (AND/OR/NOT) are supported up to 3 levels of\nnesting (for example, \"((A AND B AND C) OR NOT D) AND E\"), a maximum of 100\ncomparisons or functions are allowed in the expression. The expression\nmust be < 3000 bytes in length.\n\nSample Query:\n`(LOWER(driving_license)=\"class \\\"a\\\"\" OR EMPTY(driving_license)) AND\ndriving_years > 10`",
                            "type": "string"
                        },
                        "disableSpellCheck": {
                            "description": "Optional.\n\nThis flag controls the spell-check feature. If false, the\nservice attempts to correct a misspelled query,\nfor example, \"enginee\" is corrected to \"engineer\".\n\nDefaults to false: a spell check is performed.",
                            "type": "boolean"
                        },
                        "employmentTypes": {
                            "description": "Optional.\n\nThe employment type filter specifies the employment type of jobs to\nsearch against, such as EmploymentType.FULL_TIME.\n\nIf a value is not specified, jobs in the search results includes any\nemployment type.\n\nIf multiple values are specified, jobs in the search results include\nany of the specified employment types.",
                            "items": {
                                "enum": [
                                    "EMPLOYMENT_TYPE_UNSPECIFIED",
                                    "FULL_TIME",
                                    "PART_TIME",
                                    "CONTRACTOR",
                                    "CONTRACT_TO_HIRE",
                                    "TEMPORARY",
                                    "INTERN",
                                    "VOLUNTEER",
                                    "PER_DIEM",
                                    "FLY_IN_FLY_OUT",
                                    "OTHER_EMPLOYMENT_TYPE"
                                ],
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "jobCategories": {
                            "description": "Optional.\n\nThe category filter specifies the categories of jobs to search against.\nSee Category for more information.\n\nIf a value is not specified, jobs from any category are searched against.\n\nIf multiple values are specified, jobs from any of the specified\ncategories are searched against.",
                            "items": {
                                "enum": [
                                    "JOB_CATEGORY_UNSPECIFIED",
                                    "ACCOUNTING_AND_FINANCE",
                                    "ADMINISTRATIVE_AND_OFFICE",
                                    "ADVERTISING_AND_MARKETING",
                                    "ANIMAL_CARE",
                                    "ART_FASHION_AND_DESIGN",
                                    "BUSINESS_OPERATIONS",
                                    "CLEANING_AND_FACILITIES",
                                    "COMPUTER_AND_IT",
                                    "CONSTRUCTION",
                                    "CUSTOMER_SERVICE",
                                    "EDUCATION",
                                    "ENTERTAINMENT_AND_TRAVEL",
                                    "FARMING_AND_OUTDOORS",
                                    "HEALTHCARE",
                                    "HUMAN_RESOURCES",
                                    "INSTALLATION_MAINTENANCE_AND_REPAIR",
                                    "LEGAL",
                                    "MANAGEMENT",
                                    "MANUFACTURING_AND_WAREHOUSE",
                                    "MEDIA_COMMUNICATIONS_AND_WRITING",
                                    "OIL_GAS_AND_MINING",
                                    "PERSONAL_CARE_AND_SERVICES",
                                    "PROTECTIVE_SERVICES",
                                    "REAL_ESTATE",
                                    "RESTAURANT_AND_HOSPITALITY",
                                    "SALES_AND_RETAIL",
                                    "SCIENCE_AND_ENGINEERING",
                                    "SOCIAL_SERVICES_AND_NON_PROFIT",
                                    "SPORTS_FITNESS_AND_RECREATION",
                                    "TRANSPORTATION_AND_LOGISTICS"
                                ],
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "languageCodes": {
                            "description": "Optional.\n\nThis filter specifies the locale of jobs to search against,\nfor example, \"en-US\".\n\nIf a value isn't specified, the search results can contain jobs in any\nlocale.\n\n\nLanguage codes should be in BCP-47 format, such as \"en-US\" or \"sr-Latn\".\nFor more information, see\n[Tags for Identifying Languages](https://tools.ietf.org/html/bcp47).\n\nAt most 10 language code filters are allowed.",
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "locationFilters": {
                            "description": "Optional.\n\nThe location filter specifies geo-regions containing the jobs to\nsearch against. See LocationFilter for more information.\n\nIf a location value isn't specified, jobs fitting the other search\ncriteria are retrieved regardless of where they're located.\n\nIf multiple values are specified, jobs are retrieved from any of the\nspecified locations. If different values are specified for the\nLocationFilter.distance_in_miles parameter, the maximum provided\ndistance is used for all locations.\n\nAt most 5 location filters are allowed.",
                            "items": {
                                "description": "Input only.\n\nGeographic region of the search.",
                                "properties": {
                                    "address": {
                                        "description": "Optional.\n\nThe address name, such as \"Mountain View\" or \"Bay Area\".",
                                        "type": "string"
                                    },
                                    "distanceInMiles": {
                                        "description": "Optional.\n\n\nThe distance_in_miles is applied when the location being searched for is\nidentified as a city or smaller. When the location being searched for is a\nstate or larger, this field is ignored.",
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "latLng": {
                                        "description": "Optional.\n\nThe latitude and longitude of the geographic center from which to\nsearch. This field's ignored if `address` is provided.",
                                        "properties": {
                                            "latitude": {
                                                "description": "The latitude in degrees. It must be in the range [-90.0, +90.0].",
                                                "format": "double",
                                                "type": "number"
                                            },
                                            "longitude": {
                                                "description": "The longitude in degrees. It must be in the range [-180.0, +180.0].",
                                                "format": "double",
                                                "type": "number"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "regionCode": {
                                        "description": "Optional.\n\nCLDR region code of the country/region of the address. This is used\nto address ambiguity of the user-input location, for example, \"Liverpool\"\nagainst \"Liverpool, NY, US\" or \"Liverpool, UK\".\n\nSet this field if all the jobs to search against are from a same region,\nor jobs are world-wide, but the job seeker is from a specific region.\n\nSee http://cldr.unicode.org/ and\nhttp://www.unicode.org/cldr/charts/30/supplemental/territory_information.html\nfor details. Example: \"CH\" for Switzerland.",
                                        "type": "string"
                                    },
                                    "telecommutePreference": {
                                        "description": "Optional.\n\nAllows the client to return jobs without a\nset location, specifically, telecommuting jobs (telecomuting is considered\nby the service as a special location.\nJob.posting_region indicates if a job permits telecommuting.\nIf this field is set to TelecommutePreference.TELECOMMUTE_ALLOWED,\ntelecommuting jobs are searched, and address and lat_lng are\nignored. If not set or set to\nTelecommutePreference.TELECOMMUTE_EXCLUDED, telecommute job are not\nsearched.\n\nThis filter can be used by itself to search exclusively for telecommuting\njobs, or it can be combined with another location\nfilter to search for a combination of job locations,\nsuch as \"Mountain View\" or \"telecommuting\" jobs. However, when used in\ncombination with other location filters, telecommuting jobs can be\ntreated as less relevant than other jobs in the search response.",
                                        "enum": [
                                            "TELECOMMUTE_PREFERENCE_UNSPECIFIED",
                                            "TELECOMMUTE_EXCLUDED",
                                            "TELECOMMUTE_ALLOWED"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "publishTimeRange": {
                            "description": "Optional.\n\nJobs published within a range specified by this filter are searched\nagainst.",
                            "properties": {
                                "endTime": {
                                    "description": "End of the period.",
                                    "format": "google-datetime",
                                    "type": "string"
                                },
                                "startTime": {
                                    "description": "Begin of the period.",
                                    "format": "google-datetime",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "query": {
                            "description": "Optional.\n\nThe query string that matches against the job title, description, and\nlocation fields.\n\nThe maximum number of allowed characters is 255.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "jobView": {
                    "description": "Optional.\n\nThe desired job attributes returned for jobs in the\nsearch response. Defaults to JobView.SMALL if no value is specified.",
                    "enum": [
                        "JOB_VIEW_UNSPECIFIED",
                        "JOB_VIEW_ID_ONLY",
                        "JOB_VIEW_MINIMAL",
                        "JOB_VIEW_SMALL",
                        "JOB_VIEW_FULL"
                    ],
                    "type": "string"
                },
                "offset": {
                    "description": "Optional.\n\nAn integer that specifies the current offset (that is, starting result\nlocation, amongst the jobs deemed by the API as relevant) in search\nresults. This field is only considered if page_token is unset.\n\nFor example, 0 means to  return results starting from the first matching\njob, and 10 means to return from the 11th job. This can be used for\npagination, (for example, pageSize = 10 and offset = 10 means to return\nfrom the second page).",
                    "format": "int32",
                    "type": "integer"
                },
                "orderBy": {
                    "description": "Optional.\n\nThe criteria determining how search results are sorted. Default is\n\"relevance desc\".\n\nSupported options are:\n\n* \"relevance desc\": By relevance descending, as determined by the API\nalgorithms. Relevance thresholding of query results is only available\nwith this ordering.\n* \"posting`_`publish`_`time desc\": By Job.posting_publish_time descending.\n* \"posting`_`update`_`time desc\": By Job.posting_update_time descending.\n* \"title\": By Job.title ascending.\n* \"title desc\": By Job.title descending.\n* \"annualized`_`base`_`compensation\": By job's\nCompensationInfo.annualized_base_compensation_range ascending. Jobs\nwhose annualized base compensation is unspecified are put at the end of\nsearch results.\n* \"annualized`_`base`_`compensation desc\": By job's\nCompensationInfo.annualized_base_compensation_range descending. Jobs\nwhose annualized base compensation is unspecified are put at the end of\nsearch results.\n* \"annualized`_`total`_`compensation\": By job's\nCompensationInfo.annualized_total_compensation_range ascending. Jobs\nwhose annualized base compensation is unspecified are put at the end of\nsearch results.\n* \"annualized`_`total`_`compensation desc\": By job's\nCompensationInfo.annualized_total_compensation_range descending. Jobs\nwhose annualized base compensation is unspecified are put at the end of\nsearch results.",
                    "type": "string"
                },
                "pageSize": {
                    "description": "Optional.\n\nA limit on the number of jobs returned in the search results.\nIncreasing this value above the default value of 10 can increase search\nresponse time. The value can be between 1 and 100.",
                    "format": "int32",
                    "type": "integer"
                },
                "pageToken": {
                    "description": "Optional.\n\nThe token specifying the current offset within\nsearch results. See SearchJobsResponse.next_page_token for\nan explanation of how to obtain the next set of query results.",
                    "type": "string"
                },
                "requestMetadata": {
                    "description": "Required.\n\nThe meta information collected about the job searcher, used to improve the\nsearch quality of the service.. The identifiers, (such as `user_id`) are\nprovided by users, and must be unique and consistent.",
                    "properties": {
                        "deviceInfo": {
                            "description": "Optional.\n\nThe type of device used by the job seeker at the time of the call to the\nservice.",
                            "properties": {
                                "deviceType": {
                                    "description": "Optional.\n\nType of the device.",
                                    "enum": [
                                        "DEVICE_TYPE_UNSPECIFIED",
                                        "WEB",
                                        "MOBILE_WEB",
                                        "ANDROID",
                                        "IOS",
                                        "BOT",
                                        "OTHER"
                                    ],
                                    "type": "string"
                                },
                                "id": {
                                    "description": "Optional.\n\nA device-specific ID. The ID must be a unique identifier that\ndistinguishes the device from other devices.",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "domain": {
                            "description": "Required.\n\nThe client-defined scope or source of the service call, which typically\nis the domain on\nwhich the service has been implemented and is currently being run.\n\nFor example, if the service is being run by client <em>Foo, Inc.</em>, on\njob board www.foo.com and career site www.bar.com, then this field is\nset to \"foo.com\" for use on the job board, and \"bar.com\" for use on the\ncareer site.\n\nIf this field isn't available for some reason, send \"UNKNOWN\".\nAny improvements to the model for a particular tenant site rely on this\nfield being set correctly to a domain.\n\nThe maximum number of allowed characters is 255.",
                            "type": "string"
                        },
                        "sessionId": {
                            "description": "Required.\n\nA unique session identification string. A session is defined as the\nduration of an end user's interaction with the service over a certain\nperiod.\nObfuscate this field for privacy concerns before\nproviding it to the service.\n\nIf this field is not available for some reason, send \"UNKNOWN\". Note\nthat any improvements to the model for a particular tenant\nsite, rely on this field being set correctly to some unique session_id.\n\nThe maximum number of allowed characters is 255.",
                            "type": "string"
                        },
                        "userId": {
                            "description": "Required.\n\nA unique user identification string, as determined by the client.\nTo have the strongest positive impact on search quality\nmake sure the client-level is unique.\nObfuscate this field for privacy concerns before\nproviding it to the service.\n\nIf this field is not available for some reason, send \"UNKNOWN\". Note\nthat any improvements to the model for a particular tenant\nsite, rely on this field being set correctly to a unique user_id.\n\nThe maximum number of allowed characters is 255.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "requirePreciseResultSize": {
                    "description": "Optional.\n\nControls if the search job request requires the return of a precise\ncount of the first 300 results. Setting this to `true` ensures\nconsistency in the number of results per page. Best practice is to set this\nvalue to true if a client allows users to jump directly to a\nnon-sequential search results page.\n\nEnabling this flag may adversely impact performance.\n\nDefaults to false.",
                    "type": "boolean"
                },
                "searchMode": {
                    "description": "Optional.\n\nMode of a search.\n\nDefaults to SearchMode.JOB_SEARCH.",
                    "enum": [
                        "SEARCH_MODE_UNSPECIFIED",
                        "JOB_SEARCH",
                        "FEATURED_JOB_SEARCH"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        }
    }
}